{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ed\\\\Desktop\\\\pilot\\\\pilot\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Problems from './Problems';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [num, setNum] = useState(0);\n  const inputRef = useRef(null);\n  const [prob, setProb] = useState(\"draw a card!\");\n  var array1 = [\"abc\", \"bcd\", \"cde\", \"def\", \"efg\"];\n  const drawCard = () => {\n    setNum(randomNumberInRange(0, 4));\n    setProb(array1[num]);\n    inputRef.current.value = prob;\n    //console.log(prob);\n  };\n\n  function randomNumberInRange(min, max) {\n    // 👇️ 获取 min（含）和 max（含）之间的数字\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n  const saveAnswer = event => {\n    event.preventDefault();\n    const elementsArray = [...event.target.elements];\n    const formData = elementsArray.reduce((accumulator, currentValue) => {\n      if (currentValue.id) {\n        accumulator[currentValue.id] = currentValue.value;\n      }\n      return accumulator;\n    }, {});\n    console.log({\n      formData\n    });\n    addDoc(collection(db, \"SurveyResponse\"), formData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: saveAnswer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"task\",\n          ref: inputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.taskBtn,\n          onClick: drawCard,\n          variant: \"success\",\n          children: \"draw a card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          id: \"answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"Q1wU1i6r7gRqD2lv/CqXJ8+38rE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Problems","useState","jsxDEV","_jsxDEV","App","_s","num","setNum","inputRef","useRef","prob","setProb","array1","drawCard","randomNumberInRange","current","value","min","max","Math","floor","random","saveAnswer","event","preventDefault","elementsArray","target","elements","formData","reduce","accumulator","currentValue","id","console","log","addDoc","collection","db","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","ref","className","styles","taskBtn","onClick","variant","type","_c","$RefreshReg$"],"sources":["C:/Users/ed/Desktop/pilot/pilot/src/App.js"],"sourcesContent":["import './App.css';\nimport Problems from './Problems';\nimport { useState } from \"react\";\n\n\nfunction App() {\n  const [num,setNum] = useState(0);\n    const inputRef = useRef(null);\n    const [prob, setProb] = useState(\"draw a card!\");\n    var array1 = [\n        \"abc\",\"bcd\",\"cde\",\"def\",\"efg\"\n    ]\n\n    const drawCard = () =>{\n        setNum(randomNumberInRange(0, 4));\n        setProb(array1[num]);\n        inputRef.current.value = prob;\n        //console.log(prob);\n    }\n\n    \n    function randomNumberInRange(min, max) {\n        // 👇️ 获取 min（含）和 max（含）之间的数字\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    const saveAnswer = (event) => {\n        event.preventDefault();\n        const elementsArray = [...event.target.elements];\n\n\n        const formData = elementsArray.reduce((accumulator, currentValue) => {\n            if(currentValue.id) {\n                accumulator[currentValue.id] = currentValue.value;\n            }\n\n            return accumulator;\n        }, {});\n        \n        console.log({formData});\n        addDoc(collection(db, \"SurveyResponse\"), formData);\n    } \n\n    return (\n        <div>\n            \n            <div>\n                <form onSubmit = {saveAnswer}>\n                    <div>Task</div>\n                    <input id=\"task\" ref={inputRef} ></input>\n                    <button className ={styles.taskBtn}  onClick = {drawCard} variant=\"success\">draw a card</ button>\n                   \n                    <input type=\"text\" id=\"name\"></input>\n                    <textarea type=\"text\" id=\"answer\"></textarea>\n                    <button>Submit</button>\n                </form>\n            </div>\n        </div>\n        \n        \n        );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}